@mixin float-grid-columns($screen) {
    $list: ".col-#{$screen}-1";
    $clear: '.col-#{$screen}-1:nth-child(#{$grid-columns}n+1)';
    @for $i from 1+1 through $grid-columns {
        $list: "#{$list}, .col-#{$screen}-#{$i}";
        $clear: "#{$clear}, .col-#{$screen}-#{$i}:nth-child(#{calc($grid-columns / $i)}n+1)";
    }
    #{$list} {
        float: left;
    }
    @if $grid_clear=="true" {
        #{$clear} {
            clear: left;
        }
    }
}

@mixin grid-columns($screen, $type, $index) {
    @if ($type==width) {
        .col-#{$screen}-#{$index} {
            flex: 0 0 auto;
            width: calc(($index / $grid-columns)*100%);
        }
    }
    @if ($type==push) {
        .col-#{$screen}-push-#{$index} {
            left: calc(($index / $grid-columns)*100%);
        }
    }
    @if ($type==pull) {
        .col-#{$screen}-pull-#{$index} {
            right: calc($index / $grid-columns);
        }
    }
    @if ($type==offset) {
        .col-#{$screen}-offset-#{$index} {
            margin-left: calc($index / $grid-columns);
        }
    }
    @if ($type==padding) {
        .col-#{$screen}-padding-#{$index} {
            margin-left: calc($index / $grid-columns);
        }
    }
}

@mixin loop-grid($screen, $type) {
    $init: 1;
    @if ($type !=width) {
        $init: 0;
    }
    @else {
        $init: 1;
    }
    @for $i from $init through $grid-columns {
        @include grid-columns($screen, $type, $i);
    }
}

@mixin _grid-generator($point, $media) {
    @media #{$media} {
        // @include float-grid-columns($point);
        @include loop-grid($point, width);
        // @include loop-grid($point, push);
        // @include loop-grid($point, pull);
        // @include loop-grid($point, offset);
        // @include loop-grid($point, clear);
    }
}